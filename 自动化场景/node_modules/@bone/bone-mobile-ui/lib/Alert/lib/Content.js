'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactNative = require('react-native');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _TouchableOverlay = require('../../TouchableOverlay');

var _TouchableOverlay2 = _interopRequireDefault(_TouchableOverlay);

var _themes = require('../../style/themes');

var _themes2 = _interopRequireDefault(_themes);

var _constants = require('../../util/constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Content = function (_Component) {
  (0, _inherits3.default)(Content, _Component);

  function Content() {
    (0, _classCallCheck3.default)(this, Content);
    return (0, _possibleConstructorReturn3.default)(this, (Content.__proto__ || (0, _getPrototypeOf2.default)(Content)).apply(this, arguments));
  }

  (0, _createClass3.default)(Content, [{
    key: 'renderHeader',
    value: function renderHeader() {
      var _props = this.props,
          title = _props.title,
          titleStyle = _props.titleStyle,
          message = _props.message;

      return _react2.default.createElement(
        _reactNative.View,
        { style: styles.header },
        title ? _react2.default.createElement(
          _reactNative.Text,
          { style: [styles.title, { marginBottom: message ? 10 : 0 }, titleStyle] },
          title
        ) : null,
        this.renderMessage()
      );
    }
  }, {
    key: 'renderMessage',
    value: function renderMessage() {
      var _props2 = this.props,
          message = _props2.message,
          messageStyle = _props2.messageStyle;

      if (_react2.default.isValidElement(message)) {
        return message;
      } else if (typeof message === 'string') {
        return _react2.default.createElement(
          _reactNative.Text,
          { style: [styles.message, messageStyle] },
          message
        );
      } else {
        return null;
      }
    }
  }, {
    key: 'renderActions',
    value: function renderActions() {
      var actions = this.props.actions;

      var length = actions.length;
      return _react2.default.createElement(
        _reactNative.View,
        { style: length > 2 ? null : { height: 44, flexDirection: 'row' } },
        actions.map(function (action, index) {
          var text = action.text,
              _action$onPress = action.onPress,
              onPress = _action$onPress === undefined ? _constants.noop : _action$onPress,
              style = action.style;


          var borderRadiusStyle = {};
          if (length > 2 && index === length - 1) {
            borderRadiusStyle.borderBottomRightRadius = 14;
            borderRadiusStyle.borderBottomLeftRadius = 14;
          } else if (length <= 2) {
            if (index === 0) {
              borderRadiusStyle.borderBottomLeftRadius = 14;
            }
            if (index === length - 1) {
              borderRadiusStyle.borderBottomRightRadius = 14;
            }
          }

          return _react2.default.createElement(
            _TouchableOverlay2.default,
            {
              key: index,
              style: [{ overflow: 'hidden' }, length > 2 ? { height: 44 } : { flex: 1 }, borderRadiusStyle],
              onPress: onPress
            },
            _react2.default.createElement(
              _reactNative.View,
              {
                style: [styles.button, length > 2 ? { borderTopWidth: index !== 0 ? 1 : 0 } : { borderLeftWidth: index !== 0 ? 1 : 0 }]
              },
              _react2.default.createElement(
                _reactNative.Text,
                { style: [styles.text, style], numberOfLines: 1 },
                text
              )
            )
          );
        })
      );
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.View,
        { style: styles.body },
        this.renderHeader(),
        this.renderActions()
      );
    }
  }]);
  return Content;
}(_react.Component);

Content.propTypes = {
  title: _propTypes2.default.string,
  titleStyle: _reactNative.Text.propTypes.style,
  message: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element]),
  messageStyle: _reactNative.Text.propTypes.style,
  actions: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    text: _propTypes2.default.string,
    onPress: _propTypes2.default.func,
    style: _reactNative.Text.propTypes.style
  }))
};
Content.defaultProps = {
  actions: []
};
exports.default = Content;


var styles = _reactNative.StyleSheet.create({
  body: {
    width: 270,
    borderRadius: 14,
    backgroundColor: _themes2.default['color.fill.general'],
    overflow: 'hidden'
  },
  header: {
    paddingTop: 20,
    paddingRight: 16,
    paddingBottom: 20,
    paddingLeft: 16,
    borderBottomWidth: 1,
    borderColor: _themes2.default['color.border.general']
  },
  title: {
    lineHeight: 22,
    fontSize: 16,
    fontWeight: _themes2.default['font.weight.bold'],
    color: '#000',
    textAlign: 'center'
  },
  message: {
    lineHeight: 18,
    fontSize: 12,
    color: '#000',
    textAlign: 'center'
  },
  button: {
    flex: 1,
    borderColor: _themes2.default['color.border.general'],
    alignItems: 'center',
    justifyContent: 'center'
  },
  text: {
    fontSize: 17,
    color: '#1fc88b'
  }
});