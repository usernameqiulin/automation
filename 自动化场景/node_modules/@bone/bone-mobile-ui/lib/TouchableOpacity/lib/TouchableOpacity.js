'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Gesture = require('../../Gesture');

var _Gesture2 = _interopRequireDefault(_Gesture);

var _themes = require('../../style/themes');

var _themes2 = _interopRequireDefault(_themes);

var _constants = require('../../util/constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TouchableOpacity = function (_Component) {
  (0, _inherits3.default)(TouchableOpacity, _Component);

  function TouchableOpacity() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, TouchableOpacity);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = TouchableOpacity.__proto__ || (0, _getPrototypeOf2.default)(TouchableOpacity)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      pressing: false
    }, _this.onPressIn = function () {
      var _this$props = _this.props,
          onPressIn = _this$props.onPressIn,
          disabled = _this$props.disabled;

      _this.setState({ pressing: true });
      if (!disabled) {
        onPressIn();
      }
    }, _this.onLongPress = function () {
      var _this$props2 = _this.props,
          onLongPress = _this$props2.onLongPress,
          disabled = _this$props2.disabled;

      if (!disabled && onLongPress) {
        onLongPress();
      }
    }, _this.onPressOut = function () {
      var _this$props3 = _this.props,
          onPressOut = _this$props3.onPressOut,
          disabled = _this$props3.disabled;

      _this.setState({ pressing: false });
      if (!disabled) {
        onPressOut();
      }
    }, _this.onPress = function () {
      var _this$props4 = _this.props,
          onPress = _this$props4.onPress,
          disabled = _this$props4.disabled;

      if (!disabled) {
        onPress();
      }
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(TouchableOpacity, [{
    key: 'getGestureProps',
    value: function getGestureProps() {
      var props = {
        onPressIn: this.onPressIn,
        onPressOut: this.onPressOut,
        onPress: this.onPress
      };
      if ('onLongPress' in this.props) {
        props.onLongPress = this.onLongPress;
      }
      return props;
    }
  }, {
    key: 'getOpacityStyle',
    value: function getOpacityStyle() {
      var _props = this.props,
          disabled = _props.disabled,
          activeOpacity = _props.activeOpacity,
          disableOpacity = _props.disableOpacity;
      var pressing = this.state.pressing;

      if (disabled) {
        return { opacity: disableOpacity };
      } else if (pressing) {
        return { opacity: activeOpacity };
      } else {
        return null;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          style = _props2.style,
          children = _props2.children;

      return _react2.default.createElement(
        _Gesture2.default,
        (0, _extends3.default)({
          style: [style, this.getOpacityStyle()]
        }, this.getGestureProps()),
        children
      );
    }
  }]);
  return TouchableOpacity;
}(_react.Component);

TouchableOpacity.AnimatedTouchableOpacity = null;
TouchableOpacity.propTypes = {
  onPressIn: _propTypes2.default.func,
  onLongPress: _propTypes2.default.func,
  onPressOut: _propTypes2.default.func,
  onPress: _propTypes2.default.func,
  disabled: _propTypes2.default.bool,
  activeOpacity: _propTypes2.default.number,
  disableOpacity: _propTypes2.default.number,
  style: _propTypes2.default.any,
  children: _propTypes2.default.node
};
TouchableOpacity.defaultProps = {
  // no default value for onLongPress
  // if onLongPress not defined, Gesture won't handle long press
  onPressIn: _constants.noop,
  onPressOut: _constants.noop,
  onPress: _constants.noop,
  disabled: false,
  activeOpacity: _themes2.default['opacity.touch.active'],
  disableOpacity: _themes2.default['opacity.touch.disable']
};
exports.default = TouchableOpacity;