'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _constants = require('../../util/constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Container = function (_Component) {
  (0, _inherits3.default)(Container, _Component);

  function Container() {
    (0, _classCallCheck3.default)(this, Container);
    return (0, _possibleConstructorReturn3.default)(this, (Container.__proto__ || (0, _getPrototypeOf2.default)(Container)).apply(this, arguments));
  }

  (0, _createClass3.default)(Container, [{
    key: 'open',
    value: function open() {
      // do nothing, will be redefined in subclass
    }
  }, {
    key: 'close',
    value: function close() {
      // do nothing, will be redefined in subclass
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var visible = this.props.visible;

      if (visible) {
        this.open();
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var prevVisible = this.props.visible;
      var visible = nextProps.visible;

      if (prevVisible !== visible) {
        visible ? this.open() : this.close();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      // return null, will be redefined in subclass
      return null;
    }
  }]);
  return Container;
}(_react.Component);

Container.propTypes = {
  visible: _propTypes2.default.bool,
  onOverlayPress: _propTypes2.default.func,
  onAfterClose: _propTypes2.default.func,
  transparent: _propTypes2.default.bool,
  children: _propTypes2.default.node
};
Container.defaultProps = {
  visible: false,
  onOverlayPress: _constants.noop,
  onAfterClose: _constants.noop,
  transparent: false
};
exports.default = Container;