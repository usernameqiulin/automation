'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _DefaultContainer = require('./DefaultContainer');

var _DefaultContainer2 = _interopRequireDefault(_DefaultContainer);

var _AlertContainer = require('./AlertContainer');

var _AlertContainer2 = _interopRequireDefault(_AlertContainer);

var _PopupContainer = require('./PopupContainer');

var _PopupContainer2 = _interopRequireDefault(_PopupContainer);

var _ToastContainer = require('./ToastContainer');

var _ToastContainer2 = _interopRequireDefault(_ToastContainer);

var _createRootSibling = require('../../util/createRootSibling');

var _createRootSibling2 = _interopRequireDefault(_createRootSibling);

var _constants = require('../../util/constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getContainer = function getContainer(type) {
  switch (type) {
    case 'default':
      return _DefaultContainer2.default;
    case 'alert':
      return _AlertContainer2.default;
    case 'popup':
      return _PopupContainer2.default;
    case 'toast':
      return _ToastContainer2.default;
    default:
      return _DefaultContainer2.default;
  }
};

var Modal = function (_Component) {
  (0, _inherits3.default)(Modal, _Component);

  function Modal() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Modal);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Modal.__proto__ || (0, _getPrototypeOf2.default)(Modal)).call.apply(_ref, [this].concat(args))), _this), _this.onOverlayPress = function () {
      var _this$props = _this.props,
          closeable = _this$props.closeable,
          onClose = _this$props.onClose;

      if (closeable) {
        onClose();
      }
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(Modal, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      var _props = this.props,
          type = _props.type,
          visible = _props.visible,
          transparent = _props.transparent,
          children = _props.children;

      var Container = getContainer(type);
      this.modal = (0, _createRootSibling2.default)(_react2.default.createElement(Container, {
        visible: visible,
        onOverlayPress: this.onOverlayPress,
        transparent: transparent,
        children: children
      }));
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var type = nextProps.type,
          visible = nextProps.visible,
          transparent = nextProps.transparent,
          children = nextProps.children;

      var Container = getContainer(type);
      this.modal.update(_react2.default.createElement(Container, {
        visible: visible,
        onOverlayPress: this.onOverlayPress,
        transparent: transparent,
        children: children
      }));
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.modal.destroy();
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }], [{
    key: 'open',
    value: function open() {
      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref2$type = _ref2.type,
          type = _ref2$type === undefined ? 'default' : _ref2$type,
          _ref2$duration = _ref2.duration,
          duration = _ref2$duration === undefined ? 0 : _ref2$duration,
          _ref2$closeable = _ref2.closeable,
          closeable = _ref2$closeable === undefined ? true : _ref2$closeable,
          _ref2$onClose = _ref2.onClose,
          onClose = _ref2$onClose === undefined ? _constants.noop : _ref2$onClose,
          _ref2$transparent = _ref2.transparent,
          transparent = _ref2$transparent === undefined ? false : _ref2$transparent,
          _ref2$children = _ref2.children,
          children = _ref2$children === undefined ? null : _ref2$children;

      var Container = getContainer(type);
      var modal = void 0;
      var closeTimeout = void 0;

      function close() {
        clearTimeout(closeTimeout);
        modal.update(_react2.default.createElement(Container, {
          visible: false,
          onOverlayPress: onOverlayPress,
          onAfterClose: onAfterClose,
          transparent: transparent,
          children: children
        }));
      }

      function onOverlayPress() {
        if (closeable) {
          close();
        }
      }

      function onAfterClose() {
        modal.destroy();
        onClose();
      }

      modal = (0, _createRootSibling2.default)(_react2.default.createElement(Container, {
        visible: true,
        onOverlayPress: onOverlayPress,
        onAfterClose: onAfterClose,
        transparent: transparent,
        children: children
      }));

      if (duration > 0) {
        closeTimeout = setTimeout(close, duration);
      }

      return { close: close };
    }
  }]);
  return Modal;
}(_react.Component);

Modal.propTypes = {
  type: _propTypes2.default.oneOf(['default', 'alert', 'popup', 'toast']),
  visible: _propTypes2.default.bool,
  closeable: _propTypes2.default.bool,
  onClose: _propTypes2.default.func,
  transparent: _propTypes2.default.bool,
  children: _propTypes2.default.node
};
Modal.defaultProps = {
  type: 'default',
  visible: false,
  closeable: true,
  onClose: _constants.noop,
  transparent: false
};
exports.default = Modal;