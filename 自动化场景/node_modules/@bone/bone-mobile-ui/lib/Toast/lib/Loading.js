'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactNative = require('react-native');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _constants = require('./constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Loading = function (_Component) {
  (0, _inherits3.default)(Loading, _Component);

  function Loading() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Loading);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Loading.__proto__ || (0, _getPrototypeOf2.default)(Loading)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      rotateDeg: new _reactNative.Animated.Value(0)
    }, _this.onAnimate = function (time) {
      var rotateDeg = _this.state.rotateDeg;

      rotateDeg.setValue((time - _this.startTime) / 1000 * _constants.LOADING_ROTATE_SPEED % 360);
      _this.frameId = requestAnimationFrame(_this.onAnimate);
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(Loading, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.startAnimate();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.stopAnimate();
    }
  }, {
    key: 'startAnimate',
    value: function startAnimate() {
      this.startTime = Date.now();
      this.frameId = requestAnimationFrame(this.onAnimate);
    }
  }, {
    key: 'stopAnimate',
    value: function stopAnimate() {
      cancelAnimationFrame(this.frameId);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          width = _props.width,
          title = _props.title,
          titleStyle = _props.titleStyle;
      var rotateDeg = this.state.rotateDeg;

      return _react2.default.createElement(
        _reactNative.View,
        { style: [styles.body, { width: width }] },
        _react2.default.createElement(
          _reactNative.Animated.View,
          {
            style: [styles.loading, {
              marginBottom: title ? 0 : 5,
              transform: [{
                rotate: rotateDeg.interpolate({
                  inputRange: [0, 360],
                  outputRange: ['0deg', '360deg']
                })
              }]
            }]
          },
          _react2.default.createElement(_reactNative.Image, { style: styles.loadingImage, source: { uri: 'https://img.alicdn.com/tfs/TB1V.Jbq_tYBeNjy1XdXXXXyVXa-93-93.png' } })
        ),
        title ? _react2.default.createElement(
          _reactNative.Text,
          { style: [styles.title, titleStyle] },
          title || ' '
        ) : null
      );
    }
  }]);
  return Loading;
}(_react.Component);

Loading.propTypes = {
  width: _propTypes2.default.number,
  title: _propTypes2.default.string,
  titleStyle: _reactNative.Text.propTypes.style
};
Loading.defaultProps = {
  width: _constants.LOADING_MIN_WIDTH,
  title: ''
};
exports.default = Loading;


var styles = _reactNative.StyleSheet.create({
  body: {
    minWidth: _constants.LOADING_MIN_WIDTH,
    maxWidth: _constants.LOADING_MAX_WIDTH,
    paddingTop: 20,
    paddingRight: 20,
    paddingBottom: 15,
    paddingLeft: 20,
    borderRadius: 8,
    backgroundColor: 'rgba(51, 51, 51, 0.7)',
    alignItems: 'center'
  },
  loading: {
    width: 30,
    height: 30,
    alignItems: 'center',
    justifyContent: 'center'
  },
  loadingImage: {
    width: 30,
    height: 30
  },
  title: {
    marginTop: 12,
    lineHeight: 17,
    fontSize: 12,
    color: '#ededed',
    textAlign: 'center'
  }
});