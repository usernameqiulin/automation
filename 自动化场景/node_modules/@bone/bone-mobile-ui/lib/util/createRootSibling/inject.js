'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _set = require('babel-runtime/core-js/set');

var _set2 = _interopRequireDefault(_set);

var _map = require('babel-runtime/core-js/map');

var _map2 = _interopRequireDefault(_map);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactNative = require('react-native');

var _StaticContainer = require('./StaticContainer');

var _StaticContainer2 = _interopRequireDefault(_StaticContainer);

var _createEventEmitter = require('../createEventEmitter');

var _createEventEmitter2 = _interopRequireDefault(_createEventEmitter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var styles = _reactNative.StyleSheet.create({
  container: {
    position: 'relative',
    flex: 1,
    height: _reactNative.Dimensions.get('window').height // solve the height problem on Web
  }
});

var emitter = _reactNative.AppRegistry.rootSiblingEmitter;
if (!('rootSiblingEmitter' in _reactNative.AppRegistry)) {
  emitter = _reactNative.AppRegistry.rootSiblingEmitter = (0, _createEventEmitter2.default)();

  var originalRegisterComponent = _reactNative.AppRegistry.registerComponent;
  _reactNative.AppRegistry.registerComponent = function (appKey, getAppComponent) {
    var siblings = new _map2.default();
    var updates = new _set2.default();
    return originalRegisterComponent(appKey, function () {
      var _class, _temp2;

      var OriginalAppComponent = getAppComponent();
      return _temp2 = _class = function (_Component) {
        (0, _inherits3.default)(_class, _Component);

        function _class() {
          var _ref;

          var _temp, _this, _ret;

          (0, _classCallCheck3.default)(this, _class);

          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = _class.__proto__ || (0, _getPrototypeOf2.default)(_class)).call.apply(_ref, [this].concat(args))), _this), _this.onSiblingUpdate = function (id, el, callback) {
            if (siblings.has(id) && !el) {
              siblings.delete(id);
            } else {
              siblings.set(id, el);
            }
            updates.add(id);
            _this.forceUpdate(callback);
          }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
        }

        (0, _createClass3.default)(_class, [{
          key: 'componentWillMount',
          value: function componentWillMount() {
            emitter.on('siblingupdate', this.onSiblingUpdate);
          }
        }, {
          key: 'componentWillUnmount',
          value: function componentWillUnmount() {
            emitter.removeListener('siblingupdate', this.onSiblingUpdate);
          }
        }, {
          key: 'render',
          value: function render() {
            var els = [];
            siblings.forEach(function (el, id) {
              return els.push(_react2.default.createElement(
                _StaticContainer2.default,
                {
                  key: 'root-sibling-' + id,
                  shouldUpdate: updates.has(id)
                },
                el
              ));
            });
            updates.clear();
            return _react2.default.createElement(
              _reactNative.View,
              { style: styles.container },
              _react2.default.createElement(
                _StaticContainer2.default,
                { shouldUpdate: false },
                _react2.default.createElement(OriginalAppComponent, this.props)
              ),
              els
            );
          }
        }]);
        return _class;
      }(_react.Component), _class.diaplayName = 'Root(' + appKey + ')', _temp2;
    });
  };
}

exports.default = emitter;