'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactNative = require('react-native');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _TouchableOverlay = require('../../TouchableOverlay');

var _TouchableOverlay2 = _interopRequireDefault(_TouchableOverlay);

var _themes = require('../../style/themes');

var _themes2 = _interopRequireDefault(_themes);

var _constants = require('../../util/constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Content = function (_Component) {
  (0, _inherits3.default)(Content, _Component);

  function Content() {
    (0, _classCallCheck3.default)(this, Content);
    return (0, _possibleConstructorReturn3.default)(this, (Content.__proto__ || (0, _getPrototypeOf2.default)(Content)).apply(this, arguments));
  }

  (0, _createClass3.default)(Content, [{
    key: 'renderTop',
    value: function renderTop() {
      var _props = this.props,
          title = _props.title,
          options = _props.options;

      if (!title && !options.length) {
        return null;
      }
      return _react2.default.createElement(
        _reactNative.View,
        { style: styles.top },
        this.renderTitle(),
        this.renderOptions()
      );
    }
  }, {
    key: 'renderTitle',
    value: function renderTitle() {
      var _props2 = this.props,
          title = _props2.title,
          titleStyle = _props2.titleStyle,
          options = _props2.options;

      if (title) {
        var borderRadiusStyle = {
          borderTopRightRadius: 10,
          borderTopLeftRadius: 10
        };
        if (!options.length) {
          borderRadiusStyle.borderBottomRightRadius = 10;
          borderRadiusStyle.borderBottomLeftRadius = 10;
        }
        return _react2.default.createElement(
          _reactNative.View,
          { style: [styles.titleContainer, borderRadiusStyle] },
          _react2.default.createElement(
            _reactNative.Text,
            { style: [styles.title, titleStyle] },
            title
          )
        );
      }
      return null;
    }
  }, {
    key: 'renderOptions',
    value: function renderOptions() {
      var _props3 = this.props,
          title = _props3.title,
          options = _props3.options,
          _onPress = _props3.onPress;

      var length = options.length;
      return options.map(function (option, index) {
        var text = option.text,
            style = option.style;

        var borderRadiusStyle = {};
        var borderTopWidth = 1;
        if (index === 0 && !title) {
          borderRadiusStyle.borderTopRightRadius = 10;
          borderRadiusStyle.borderTopLeftRadius = 10;
          borderTopWidth = 0;
        }
        if (index === length - 1) {
          borderRadiusStyle.borderBottomRightRadius = 10;
          borderRadiusStyle.borderBottomLeftRadius = 10;
        }
        return _react2.default.createElement(
          _TouchableOverlay2.default,
          {
            key: index,
            style: [{ height: 56 }, borderRadiusStyle],
            onPress: function onPress() {
              return _onPress(index);
            }
          },
          _react2.default.createElement(
            _reactNative.View,
            { style: [styles.button, { borderTopWidth: borderTopWidth }] },
            _react2.default.createElement(
              _reactNative.Text,
              { style: [styles.buttonText, style], numberOfLines: 1 },
              text
            )
          )
        );
      });
    }
  }, {
    key: 'renderBottom',
    value: function renderBottom() {
      var _props4 = this.props,
          options = _props4.options,
          cancelText = _props4.cancelText,
          cancelStyle = _props4.cancelStyle,
          onCancelPress = _props4.onCancelPress;

      return _react2.default.createElement(
        _reactNative.View,
        { style: styles.bottom },
        _react2.default.createElement(
          _TouchableOverlay2.default,
          { style: styles.cancel, onPress: onCancelPress },
          _react2.default.createElement(
            _reactNative.Text,
            { style: [styles.cancelText, cancelStyle], numberOfLines: 1 },
            cancelText
          )
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactNative.View,
        { style: styles.body },
        this.renderTop(),
        this.renderBottom()
      );
    }
  }]);
  return Content;
}(_react.Component);

Content.propTypes = {
  title: _propTypes2.default.string,
  titleStyle: _reactNative.Text.propTypes.style,
  options: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    text: _propTypes2.default.string,
    style: _reactNative.Text.propTypes.style
  })),
  onPress: _propTypes2.default.func,
  cancelText: _propTypes2.default.string,
  cancelStyle: _reactNative.Text.propTypes.style,
  onCancelPress: _propTypes2.default.func
};
Content.defaultProps = {
  options: [],
  onPress: _constants.noop
};
exports.default = Content;


var styles = _reactNative.StyleSheet.create({
  body: {
    paddingRight: 16,
    paddingLeft: 16
  },
  top: {
    borderRadius: 10,
    backgroundColor: _themes2.default['color.fill.general'],
    overflow: 'hidden'
  },
  titleContainer: {
    paddingTop: 20,
    paddingRight: 20,
    paddingBottom: 20,
    paddingLeft: 20
  },
  title: {
    lineHeight: 17,
    fontSize: 12,
    color: '#999',
    textAlign: 'center'
  },
  button: {
    flex: 1,
    paddingRight: 20,
    paddingLeft: 20,
    borderColor: _themes2.default['color.border.general'],
    alignItems: 'center',
    justifyContent: 'center'
  },
  buttonText: {
    fontSize: 16,
    color: '#333'
  },
  bottom: {
    paddingTop: 12,
    paddingBottom: 18
  },
  cancel: {
    height: 56,
    paddingRight: 20,
    paddingLeft: 20,
    borderRadius: 10,
    backgroundColor: _themes2.default['color.fill.general'],
    alignItems: 'center',
    justifyContent: 'center'
  },
  cancelText: {
    fontSize: 16,
    color: '#333'
  }
});