'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactNative = require('react-native');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _TouchableOverlay = require('../../TouchableOverlay');

var _TouchableOverlay2 = _interopRequireDefault(_TouchableOverlay);

var _themes = require('../../style/themes');

var _themes2 = _interopRequireDefault(_themes);

var _constants = require('../../util/constants');

var _constants2 = require('./constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var openParams = {
  toValue: 1,
  duration: _constants2.SWITCH_ANIMATION_DURATION,
  easing: _reactNative.Easing.easeOut
};

var closeParams = {
  toValue: 0,
  duration: _constants2.SWITCH_ANIMATION_DURATION,
  easing: _reactNative.Easing.easeOut
};

var Switch = function (_Component) {
  (0, _inherits3.default)(Switch, _Component);

  function Switch() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Switch);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Switch.__proto__ || (0, _getPrototypeOf2.default)(Switch)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      backgroundColor: new _reactNative.Animated.Value(_this.props.checked ? 1 : 0),
      translateX: new _reactNative.Animated.Value(_this.props.checked ? 1 : 0)
    }, _this.onPress = function () {
      var _this$props = _this.props,
          checked = _this$props.checked,
          onChange = _this$props.onChange;

      onChange(checked);
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(Switch, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var checked = nextProps.checked;

      if (this.props.checked !== checked) {
        checked ? this.open() : this.close();
      }
    }
  }, {
    key: 'open',
    value: function open() {
      var _state = this.state,
          backgroundColor = _state.backgroundColor,
          translateX = _state.translateX;

      this.stopAnimate();
      _reactNative.Animated.parallel([_reactNative.Animated.timing(backgroundColor, openParams), _reactNative.Animated.timing(translateX, openParams)]).start();
    }
  }, {
    key: 'close',
    value: function close() {
      var _state2 = this.state,
          backgroundColor = _state2.backgroundColor,
          translateX = _state2.translateX;

      this.stopAnimate();
      _reactNative.Animated.parallel([_reactNative.Animated.timing(backgroundColor, closeParams), _reactNative.Animated.timing(translateX, closeParams)]).start();
    }
  }, {
    key: 'stopAnimate',
    value: function stopAnimate() {
      var _state3 = this.state,
          backgroundColor = _state3.backgroundColor,
          translateX = _state3.translateX;

      backgroundColor.stopAnimation();
      translateX.stopAnimation();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          disabled = _props.disabled,
          color = _props.color;
      var _state4 = this.state,
          backgroundColor = _state4.backgroundColor,
          translateX = _state4.translateX;

      return _react2.default.createElement(
        _TouchableOverlay2.default.AnimatedTouchableOverlay,
        {
          style: [styles.body, {
            backgroundColor: backgroundColor.interpolate({
              inputRange: [0, 1],
              outputRange: [_themes2.default['switch.background.close'], color]
            })
          }],
          onPress: this.onPress,
          disabled: disabled,
          activeOverlayColor: 'transparent'
        },
        _react2.default.createElement(_reactNative.Animated.View, {
          style: [styles.switch, {
            transform: [{
              translateX: translateX.interpolate({
                inputRange: [0, 1],
                outputRange: [0, 20]
              })
            }]
          }]
        }),
        _react2.default.createElement(_reactNative.View, { style: styles.cover })
      );
    }
  }]);
  return Switch;
}(_react.Component);

Switch.propTypes = {
  checked: _propTypes2.default.bool,
  disabled: _propTypes2.default.bool,
  onChange: _propTypes2.default.func,
  color: _propTypes2.default.string
};
Switch.defaultProps = {
  checked: false,
  disabled: false,
  onChange: _constants.noop,
  color: '#1fc88b'
};
exports.default = Switch;


var styles = _reactNative.StyleSheet.create({
  body: {
    position: 'relative',
    width: 50,
    height: 30,
    borderRadius: 15.5,
    backgroundColor: _themes2.default['switch.background.close']
  },
  switch: {
    position: 'absolute',
    top: 1,
    left: 1,
    width: 28,
    height: 28,
    borderRadius: 14,
    backgroundColor: _themes2.default['color.fill.general']
  },
  cover: {
    position: 'absolute',
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    borderRadius: 15.5,
    borderWidth: 0.5,
    borderColor: 'rgba(0, 0, 0, 0.1)'
  }
});