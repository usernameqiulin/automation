'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _axios = require('axios');

var _axios2 = _interopRequireDefault(_axios);

var _BaseIntl2 = require('./BaseIntl');

var _BaseIntl3 = _interopRequireDefault(_BaseIntl2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var localStorage = window.localStorage;

var Intl = function (_BaseIntl) {
  (0, _inherits3.default)(Intl, _BaseIntl);

  function Intl() {
    (0, _classCallCheck3.default)(this, Intl);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Intl.__proto__ || (0, _getPrototypeOf2.default)(Intl)).call(this));

    _this.currentConfig = {
      uri: '',
      appName: '',
      locale: '',
      localMessages: {}
    };
    _this.requestTimes = 0;
    return _this;
  }

  (0, _createClass3.default)(Intl, [{
    key: 'request',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
        var _currentConfig, uri, appName, locale, localMessages, key, requestTimes, lastData, params, data;

        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _currentConfig = this.currentConfig, uri = _currentConfig.uri, appName = _currentConfig.appName, locale = _currentConfig.locale, localMessages = _currentConfig.localMessages;
                key = 'bone-intl-' + appName + '-' + locale;
                requestTimes = ++this.requestTimes;

                // get last data from local storage

                lastData = void 0;

                try {
                  lastData = JSON.parse(localStorage.getItem(key));
                } catch (err) {
                  lastData = null;
                }

                params = { appName: appName, language: locale };

                if (lastData) {
                  // if local storage exits, emit first render
                  this.dispatch(locale, lastData.data);
                  // and add version to params to do the comparison at server side
                  params.version = lastData.version;
                } else {
                  // local storage not exits, read from local messages
                  if (locale in localMessages) {
                    this.dispatch(locale, localMessages[locale]);
                  }
                }

                // request newest data
                data = void 0;
                _context.prev = 8;
                _context.next = 11;
                return _axios2.default.get(uri, { params: params });

              case 11:
                data = _context.sent;

                data = data.data.data;
                _context.next = 20;
                break;

              case 15:
                _context.prev = 15;
                _context.t0 = _context['catch'](8);

                if (!(_context.t0.code == 304)) {
                  _context.next = 19;
                  break;
                }

                return _context.abrupt('return');

              case 19:
                return _context.abrupt('return');

              case 20:
                if (!(requestTimes < this.requestTimes)) {
                  _context.next = 22;
                  break;
                }

                return _context.abrupt('return');

              case 22:

                // got newest data, emit second render
                this.dispatch(locale, data.data);

                // got newest data, reset the local storage
                localStorage.setItem(key, (0, _stringify2.default)(data));

              case 24:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this, [[8, 15]]);
      }));

      function request() {
        return _ref.apply(this, arguments);
      }

      return request;
    }()
  }, {
    key: 'config',
    set: function set() {
      var nextConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      this.currentConfig = (0, _extends3.default)({}, this.currentConfig, nextConfig);
      this.request();
    }
  }]);
  return Intl;
}(_BaseIntl3.default);

exports.default = Intl;